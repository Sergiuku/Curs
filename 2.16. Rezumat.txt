	Vom incepe cu Capitolul 1 ce contine retelistica. Retelistica ne ajuta la comunicarea
intre noduri. Prin nod ne referim la orice dispozitiv contectat la retea.
	Fiecare nod este conectat la o retea. Orice nod are o adresa unica numita 
adresa IP formata din numere de la 0 la 255, dar unele ip-uri sunt folosite special 
numai in retele locale. Ip-urile functioneaza ca si o adresa dintr-o localitate, 
fiind folosita pentru a gasi un loc anume, iar in cazul nostru un dispozitiv conectat la retea.
	Pentru a accesa orice nod din retea este nevoie sa stii adresa Ip sau DNS-ul. 
	DNS-ul este foarte folosit in reteaua WEB. DNS-ul este un sistem ce converteste numele unui domeniu in adresa IP asociata acestuia.
	Web-ul este una dintre cele mai raspandite servicii din internet, internetul  fiind 
 o retea alcatuita din mai multe retele. WEB-ul este un serviciu de documente interconectate, 
ele putand fi accesate printr-un program numit  client. Pe langa WEB mai exista si alte servicii cum ar
fi pop3 pentru e-mail sau ftp pentru transferul de fisiere. 
	In cazul web-ului, clientul este browserul prin care accesam acest serviciu. 
	Dar daca avem nevoie de client pentru a accesa informatiile, vom avea  nevoie si
de un server care transmite acele informatii. Pentru serviciul web serverul este un program numit apache.
Daemonul este un program ce ruleaza pe server si ajuta la comunicarea cu clientul.
Pentru a comunica intre ele au nevoie de un protocol, de un limbaj comun, 
iar pentru web acel limbaj comun este HTTP(Hypertext transfer protocol). Totodata
pentru a face comunicarea posibila intre cele 2 este nevoie de un port prin care 
serverul sa stie sa faca comunicarea corect. Comunicarea intre server si client se face prin pachete de date.
	Aceste pachete de date sunt insemnate cu un anumit port pentru comunica cele 2. 
	Serverul trimite pachetele pe acel port, iar o data primite de catre client acesta 
va stii ca portul acela ii apartine serverului cu care trebuie sa comunice.
	Portul deschide o cale de comunicare intre cei 2. Primul lucru ce il face browser-ul 
este sa stabileasca o conexiune prin retea la daemon, aici intervenind DNS-ul. 
	HTTP impreuna cu numele domeniului si cu portul alcatuiesc URL-ul.Portul standard pentru http este 80. 
Broswser-ul trimite o cerere la serverul DNS primind inapoi adresa IP asociata 
domeniului din URL urmata de conexiunea la acea adresa IP pe portul 80, dupa care browserul va incepe sa ceara 
informatii serverului web primind acele informatii prin pachete de date.
	In Capitolul 2 vom vorbi despre controlul fluxului de executie si date, 
constructe prin care controlezi fluxul si sintaxa in php.
	Php-ul este un limbaj de uz general prin care se pot dezvolta aplicatii web.
	Php-ul este o extensie a serverului web, procesand codul din pagina si
transmitand rezultatul clientului.Pagina web este descrisa prin cod html, iar codul php este pus in mai multe scripturi si este
folosit la generarea codului acelei pagini.
	Fluxul de executie este modul prin care instructiunile cuprinse in codul php
se executa. Acest flux poate fi intrerupt sau controlat de anumite constructe.
	Un exemplu ar fi constructul if care este o instructiune prestabilita pe baza
sintaxei php folosit pentru a executa o bucata de cod in functie de valoarea de 
adevar a unei expresii boolean ca si conditie. In functie de valoarea de adevar 
se va executa blocul de instructiuni de la ramura if, else if sau ramura else.
Astfel, pe baza acestui construct manipulam fluxul de executie. Ca structuri de 
control mai avem structura for, foreach. Acestea sunt structuri repetitive
prin care se cunoaste dinainte numarul de repetitii si care deobicei contin o conditie
ce este alcatuita dintr-o expresie boolean si un bloc de instructiuni ce va fi 
executat repetitiv cat timp conditia este adevarata. In schimb, structura while este intr-adevar o structura
repetitiva, dar in cazul ei nu se cunosct dinainte numarul de repetitii.
	Revenind la conditia unui construct, aceasta pot fi expresii boolean care 
sunt la randul lor niste constructii ale limbajului PHP. O expresie poate fi un 
sir de caractere, o variabila sau alte constructe. Aceste expresii pot contine 
operatori matematici, cum ar fi adunare,scadere, inmultire sau impartire. 
Rezultatul operatiilor pot fi atribuite totodata unei variabile fiind tot valori ce pot fi afisate. 
	Pe langa operatorii matematici mai avem si operatorii de comparare cum ar fi
egal, identic, diferit, mai mic, mai mare, acestia sunt foarte des folositi in cadrul
constructului IF pentru a exprima conditia ce trebuie verificata, dar totodata 
toati operatorii de comparare pot fi atribuiti unei variabila, iar variabila sa faca parte din conditie.
	Variabilele sunt elemente ce au o anumita valoare data in cod sau introdusa chiar de client.
	Variabilele pot contine mai multe tipuri de valori cum ar fi:
	Int - este o valoare ce contine numai numere intregi;
	String - acesta primeste ca valoare un sir de caractere.
	Pe langa acestea mai avem si operatorii logici, and, or, xor, && si ||.
	Construind codul-sursa cu toate structurile de control, operatorii,expresiile si
variabilele trebuie sa si afisam cumva. De asta se ocupa instructiunile print si echo.  
	Cu ajutorul acestora vom putea afisa rezultatul scriptului php intr-un format HTML, acceptat de client(browser).
	Toate acestea fac parte din fluxul de executie. Cu ajutorul lor putem intrerupe,
continua sau modifica, afisa fluxul.
	


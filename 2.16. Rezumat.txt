	Vom incepe cu Capitolul 1 ce contine retelistica. Retelistica ne ajuta la comunicarea intre noduri. Prin nod ne referim la orice dispozitiv contectat la retea.
Fiecare nod are o adresa IP particulara, iar prin aceste adrese IP poti comunica cu un nod. Cea mai raspandita retea este Internetul(WORLD WIDE WEB). Internetul este o retea alcatuita din mai multe servicii, cum ar fi pop3 pentru e-mail, ftp pentru transferul de fisere. Aceste servicii sunt accesate printr-un program numit client.
Un client pentru www este browserul prin care accesam aceste adrese IP, dar daca avem client avem  nevoie si de un server, serverul fiind un program numit daemon care asteapta instructiuni de la client.  Fara aceste 2 programe comunicarea prin intermediul internetului nu ar fi posibila.

	In Capitolul 2 vom vorbi despre controlul fluxului de executie si date, constructe prin care controlezi fluxul si sintaxa in php.
	Php-ul este un limbaj de uz general prin care se pot dezvolta aplicatii web. Php-ul este o extensie a serverului web, procesand codul-sursa din pagina si transmitand rezultatul clientului.
	Fluxul de executie este modul prin care instructiunile cuprinse in codul-sursa se executa. Acest flux poate fi intrerupt sau controlat cum ar fi de constructele create.
	Constructele sunt structuri de control prin care controlam fluxul de executie pentru a creea rezultatul final transmis clientului.
	Sintaxa este cea care ne ajuta in crearea un construct php. Fiecare construct are o regula sintactica ce trebuie respectata pentru a-l face efiecient si corect.
Astfel, putem lua exemple ca structura de control, constructul if.
Constructul if este folosita pentru a executa o bucata de cod in functie de valoarea de adevar a unei conditii. If contine un set de instructiuni ce vor fi executate atunci cand conditia este indeplinita. Constructul if mai contine o ramura else if prin care putem introduce mai multe conditii si o ramura else care va fi executata numai daca celelalte conditii nu sunt indeplinite.
Ca structuri de control mai avem structura for, while, foreach.
Acestea sunt structuri repetitive prin care se cunoaste dinainte numarul de repetitii  si care deobicei contine o conditie  si un bloc de instructiuni ce va fi executat repetitiv cat timp conditia este adevarata.
Revenind la conditia unui construct, aceasta poate fi alcatuita din expresii care sunt la randul lor niste constructii ale limbajului PHP. O expresie poate fi un sir de caractere, o variabila sau alte constructe. 
Aceste expresii pot contine operatori matematici, cum ar fi adunare,scadere, inmultire sau impartire. Aceste operatii pot fi atribuite totodata unei variabile fiind tot valori ce pot fi afisate. Pe langa operatorii matematici mai avem si operatorii de comparare cum ar fi egal, identif, diferit, mai mic, mai mare ce sunt cel mai des folositi in cadrul constructului IF pentru a exprima conditia ce trebuie verificata, dar totodata toate acestea pot fi atribuite unei variabila, iar variabila sa faca parte din conditie.
Variabilele sunt elemente ce au o anumita valoare data in cod sau introdusa chiar de client.
Variabilele pot contine mai multe tipuri de valori cum ar fi:
	Int - este o valoare ce contine numai numere intregi;
	String - acesta primeste ca valoare un sir de caractere.
Pe langa acestea mai avem si operatorii logici, and, or, xor, && si ||.
Construind codul-sursa cu toate structurile de control, operatorii,expresiile si variabilele trebuie sa si afisam cumva. De asta se ocupa instructiunile print si echo.  Cu ajutorul acestora vom putea afisa rezultatul scriptului php intr-un format HTML, acceptat de client(browser).
Toate acestea fac parte din fluxul de executie. Cu ajutorul lor putem intrerupe, continua sau modifica, afisa fluxul. Vorbind de flux, acesta va incepe tot timpul cu prima linie de cod si va cobora pana la ultima, asta daca nu va aparea pe parcurs o structura de control ce va controla fluxul. 
	

